{"version":3,"sources":["components/AddNoteForm.jsx","components/Note.jsx","components/Notes.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddNoteForm","defaultState","id","content","state","event","this","setState","target","name","value","a","preventDefault","fetch","process","method","headers","body","JSON","stringify","status","props","updateNotes","className","onSubmit","formSubmitHandler","bind","htmlFor","cols","rows","placeholder","onChange","inputChangeHandler","Component","Note","deleteNote","onClick","deleteClickHandler","Notes","notes","response","ok","json","console","error","foundIndex","findIndex","note","newState","splice","map","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbd23e88.chunk.js","sourcesContent":["import { Component } from 'react';\n\nexport default class AddNoteForm extends Component {\n  defaultState = {\n    id: '0',\n    content: ''\n  }\n\n  state = this.defaultState;\n\n  inputChangeHandler(event) {\n    this.setState({ ...this.state, [event.target.name]: event.target.value });\n  }\n\n  async formSubmitHandler(event) {\n    event.preventDefault();\n\n    const response = await fetch(process.env.REACT_APP_BACKEND_NOTES, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.state)\n    });\n    if (response.status === 204) {\n      this.props.updateNotes();\n    }\n\n    this.setState(this.defaultState);\n  }\n\n  render() {\n    return (\n      <form className=\"note-form\" onSubmit={this.formSubmitHandler.bind(this)}>\n        <div>\n          <label className=\"note-form-label\" htmlFor=\"noteContent\">New note</label>\n          <textarea\n            className=\"note-form-input\"\n            name=\"content\"\n            id=\"noteContent\"\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Note content\"\n            onChange={this.inputChangeHandler.bind(this)}\n            value={this.state.content}\n          />\n        </div>\n        <button className=\"note-form-btn\">Add note</button>\n      </form>\n    )\n  }\n}\n","import { Component } from 'react'\n\nexport default class Note extends Component {\n  deleteClickHandler() {\n    this.props.deleteNote(this.props.id);\n  }\n\n  render() {\n    return (\n      <div className=\"note-container\">\n        <p>{this.props.content}</p>\n        <div className=\"note-delete\" onClick={this.deleteClickHandler.bind(this)}>✗</div>\n      </div>\n    )\n  }\n}\n","import { Component } from 'react';\nimport AddNoteForm from './AddNoteForm';\nimport Note from './Note';\n\nexport default class Notes extends Component {\n  state = {\n    notes: []\n  }\n\n  async updateNotes() {\n    const response = await fetch(process.env.REACT_APP_BACKEND_NOTES);\n    if (response.ok) {\n      try {\n        this.setState({ notes: await response.json() });\n      } catch {\n        console.error('Error parsing server response as JSON');\n      }\n    } else {\n      console.error(`Request failed: ${response.status}`);\n    }\n  }\n\n  async deleteNote(id) {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_NOTES}/${id}`, {\n      method: 'DELETE',\n    });\n    if (response.status === 204) {\n      const foundIndex = this.state.notes.findIndex(note => note.id === id);\n      if (foundIndex > -1) {\n        const newState = { ...this.state };\n        newState.notes.splice(foundIndex, 1);\n        this.setState(newState);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.updateNotes();\n  }\n\n  render() {\n    return (\n      <div className=\"notes-wrapper\">\n        <div className=\"notes-header-container\">\n          <h3>Notes</h3>\n          <div className=\"notes-refresh\" onClick={this.updateNotes.bind(this)}>⟳</div>\n        </div>\n        <div className=\"notes-container\">\n          {this.state.notes.map(note =>\n            <Note\n              {...note}\n              deleteNote={this.deleteNote.bind(this)}\n              key={note.id}\n            />\n          )}\n        </div>\n        <AddNoteForm updateNotes={this.updateNotes.bind(this)} />\n      </div>\n    )\n  }\n}\n","import './App.css';\nimport Notes from './components/Notes';\n\nfunction App() {\n  return (\n    <Notes />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}